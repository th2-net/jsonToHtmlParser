 @import './common/vars';

 .splitter {
     width: 100%;
     height: calc(100vh - 31px);
     display: grid;
     // Default values. Will be overwritten by style at SplitView component.
     grid-template-columns: calc(50% - 13px) $splitterBarWidth calc(50% - 13px);
     grid-template-rows: 100%;
     grid-template-areas: 'left-panel splitter-bar right-panel';
     position: relative;
 
     &.dragging {
         @include unselectable;
         cursor: col-resize;
 
         &.vertical {
             cursor: row-resize;
         }
     }
 
     &-bar {
         grid-area: splitter-bar;
         height: 100%;
         width: $splitterBarWidth;
         cursor: col-resize;
         position: relative;
 
         &-button {
             position: absolute;
             top: 50%;
             left: 50%;
             transform: translate(-50%, -50%);
             width: 30px;
             height: 20px;
             background-color: $splitterColor;
             opacity: 0.5;
             border-radius: 14px;
             display: flex;
             justify-content: center;
             align-items: center;
             z-index: 10;
         }
 
         &-icon {
             height: 20px;
             width: 20px;
             background-size: 100%;
             background-image: url('../../resources/icons/splitter-icon.svg');
         }
 
         &.dragging {
             grid-area: initial;
             position: absolute;
             z-index: 2;
         }
 
         &:hover:after,
         &.dragging:after {
             content: '';
             height: 100%;
             width: 0;
             border: 1.5px solid $splitterColor;
             position: absolute;
             left: 14px;
             border-radius: 5px;
             background-color: $splitterColor;
         }
     }
 
     &-preview {
         position: absolute;
         top: 0;
         left: 0;
         right: 0;
         bottom: 0;
         z-index: 1;
 
         display: grid;
         grid-template-columns: calc(50% - 13px) $splitterBarWidth calc(50% - 13px);
         grid-template-areas: 'left-preview _ right-preview';
 
         &-left {
             grid-area: left-preview;
         }
 
         &-right {
             grid-area: right-preview;
         }
 
         &-left,
         &-right {
             background-color: #000000;
             border-radius: 5px;
             opacity: 0.1;
         }
     }
 
     &-panel {
         &-left {
             grid-area: left-panel;
         }
 
         &-right {
             grid-area: right-panel;
         }
 
         &-left,
         &-right {
             height: 100%;
 
             &.dragging {
                 filter: opacity(0.3);
             }
 
             &.hidden {
                 visibility: hidden;
             }
         }
     }
 
     &.vertical {
         grid-template-columns: 100%;
         grid-template-rows: calc(50% - 13px) $splitterBarWidth calc(50% - 13px);
         grid-template-areas:
             'left-panel'
             'splitter-bar'
             'right-panel';
     }
 
     &.vertical & {
         &-bar {
             width: 100%;
             height: $splitterBarWidth;
             cursor: row-resize;
 
             &-button {
                 transform: translate(-50%, -50%);
                 width: 20px;
                 height: 30px;
             }
 
             &-icon {
                 transform: rotate(90deg);
             }
 
             &:hover:after,
             &.dragging:after {
                 width: 100%;
                 height: 0;
                 left: 0;
                 top: 50%;
                 transform: translateY(-50%);
             }
         }
 
         &-preview {
            grid-template-columns: none;
             grid-template-areas:
                 'left-preview'
                 '_'
                 'right-preview';
         }
     }
 }
 
 .splitter-panel {
     height: 100%;
     display: flex;
 
     &__content {
         width: 100%;
         height: 100%;
         position: relative;
         display: flex;
         flex-direction: column;
 
         & > *:not(:first-child) {
             margin-top: 5px;
         }
     }
 }
 